<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">
    <bean id="Sim" class="com.example.practice.IOC.Airtel"></bean>

    <bean id="Jack" class="com.example.practice.dependencyInjection.Student">
        <constructor-arg name="studentName" value="Jack" type="java.lang.String"/>
        <constructor-arg name="studentId" value="2" type="int"/>
    </bean>

    <bean id="John" class="com.example.practice.dependencyInjection.Student">
        <constructor-arg name="studentId" value="1" type="int"/>
    </bean>

    <!--setter injection
    <bean id="student1" class="com.example.practice.dependencyInjection.objects.Student">
        <property name="id" value="1001"></property>
        <property name="mathCheat">
            <bean class="com.example.practice.dependencyInjection.objects.MathCheat"></bean>
        </property>
    </bean>

    constructor injection
    <bean id="student2" class="com.example.practice.dependencyInjection.objects.Student">
        <constructor-arg name="id" value="1002"></constructor-arg>
        <constructor-arg name="mathCheat">
            <bean class="com.example.practice.dependencyInjection.objects.MathCheat"></bean>
        </constructor-arg>
    </bean>-->

    <!--using cheat object reference-->
    <bean id="mathCheatObj" class="com.example.practice.dependencyInjection.objects.MathCheat"></bean>
    <bean id="scienceCheatObj" class="com.example.practice.dependencyInjection.objects.ScienceCheat"></bean>

    <bean id="student1" class="com.example.practice.dependencyInjection.objects.Student">
        <constructor-arg name="id" value="1001"></constructor-arg>
        <constructor-arg name="cheat" ref="scienceCheatObj"></constructor-arg>
    </bean>

    <!--
    id needs to be heart and match variable name in body class
    so that autowire="byName" works
    this requires the setter method
    if id and reference variable name does not match, but their types match,
    then use autowire="byType" to inject the object
    -->
    <bean id="heartObj" class="com.example.practice.autowire.Heart"></bean>
    <bean id="human" class="com.example.practice.autowire.Human" autowire="constructor">
      <!--<property name="heart" ref="heartObj"></property> -->
    </bean>

</beans>